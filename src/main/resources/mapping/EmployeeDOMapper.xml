<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sencloud.mybatis.dao.EmployeeDOMapper">
  <cache></cache>

  <resultMap id="BaseResultMap" type="com.sencloud.mybatis.dataobject.EmployeeDO">
  <!--
    WARNING - @mbg.generated
    This element is automatically generated by MyBatis Generator, do not modify.
    This element was generated on Mon Jul 08 14:48:43 CST 2019.
  -->
  <id column="employee_id" jdbcType="INTEGER" property="employeeId" />
  <result column="first_name" jdbcType="VARCHAR" property="firstName" />
  <result column="last_name" jdbcType="VARCHAR" property="lastName" />
  <result column="email" jdbcType="VARCHAR" property="email" />
  <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
  <result column="job_id" jdbcType="VARCHAR" property="jobId" />
  <result column="salary" jdbcType="DOUBLE" property="salary" />
  <result column="commission_pct" jdbcType="DOUBLE" property="commissionPct" />
  <result column="manager_id" jdbcType="INTEGER" property="managerId" />
  <result column="department_id" jdbcType="INTEGER" property="departmentId" />
  <result column="hiredate" jdbcType="TIMESTAMP" property="hiredate" />
</resultMap>


  <!--  场景一： 查询员工时查询部门-->
  <!--##################### 场景一 ##################-->
  <!-- 1. 联合查询，级联属性封装结果集 -->
  <resultMap id="empDeptMap" type="com.sencloud.mybatis.dataobject.EmployeeDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 08 14:48:43 CST 2019.
    -->
    <id column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="first_name" jdbcType="VARCHAR" property="firstName" />
    <result column="last_name" jdbcType="VARCHAR" property="lastName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="job_id" jdbcType="VARCHAR" property="jobId" />
    <result column="salary" jdbcType="DOUBLE" property="salary" />
    <result column="commission_pct" jdbcType="DOUBLE" property="commissionPct" />
    <result column="manager_id" jdbcType="INTEGER" property="managerId" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="hiredate" jdbcType="TIMESTAMP" property="hiredate" />

    <result column="department_id" property="departmentDO.departmentId"/>
    <result column="department_name" property="departmentDO.departmentName"/>
  </resultMap>

  <!--2. 使用association定义关联的单个对象的封装规则-->
  <resultMap id="empDeptMap2" type="com.sencloud.mybatis.dataobject.EmployeeDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 08 14:48:43 CST 2019.
    -->
    <id column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="first_name" jdbcType="VARCHAR" property="firstName" />
    <result column="last_name" jdbcType="VARCHAR" property="lastName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="job_id" jdbcType="VARCHAR" property="jobId" />
    <result column="salary" jdbcType="DOUBLE" property="salary" />
    <result column="commission_pct" jdbcType="DOUBLE" property="commissionPct" />
    <result column="manager_id" jdbcType="INTEGER" property="managerId" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="hiredate" jdbcType="TIMESTAMP" property="hiredate" />

    <!--
      association 可以指定联合的JavaBean对象
      property="departmentDO" : 指定那个属性是联合的对象
      javaType: 指定这个属性对象的类型[不能省略]
    -->
    <association property="departmentDO" javaType="com.sencloud.mybatis.dataobject.DepartmentDO">
      <id  column="department_id"  property="departmentId"/>
      <result column="department_name" property="departmentName"/>
    </association>
  </resultMap>

  <!--3 使用association分布查询-->
  <resultMap id="empDeptMap3" type="com.sencloud.mybatis.dataobject.EmployeeDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 08 14:48:43 CST 2019.
    -->
    <id column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="first_name" jdbcType="VARCHAR" property="firstName" />
    <result column="last_name" jdbcType="VARCHAR" property="lastName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="job_id" jdbcType="VARCHAR" property="jobId" />
    <result column="salary" jdbcType="DOUBLE" property="salary" />
    <result column="commission_pct" jdbcType="DOUBLE" property="commissionPct" />
    <result column="manager_id" jdbcType="INTEGER" property="managerId" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="hiredate" jdbcType="TIMESTAMP" property="hiredate" />

    <!--
        association 定义关联对象的封装规则
        select： 表明当前属性是调用select 指定的方法查出的结果
        column ： 指定将那一列的值传给这个方法

    -->
    <association property="departmentDO" select="com.sencloud.mybatis.dao.DepartmentDOMapper.selectByPrimaryKey"
    column="department_id"></association>
  </resultMap>



  <select id="findEmpAndDept" resultMap="empDeptMap3">
    select
    e.*,d.department_id,d.department_name
    from employees e,departments d
    where e.department_id = d.department_id and e.employee_id = #{id}

  </select>
  





  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 08 14:48:43 CST 2019.
    -->
    employee_id, first_name, last_name, email, phone_number, job_id, salary, commission_pct, 
    manager_id, department_id, hiredate
  </sql>

  <!--查询所有-->
  <select id="findByPage"  resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 08 14:48:43 CST 2019.
    -->
    select
    <include refid="Base_Column_List" />
    from employees

  </select>



  <!--查询所有-->
  <select id="findByNameForPage"  parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 08 14:48:43 CST 2019.
    -->
    select
    <include refid="Base_Column_List" />
    from employees
    where first_name like concat(#{firstName},'%')
  </select>







  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 08 14:48:43 CST 2019.
    -->
    select 
    <include refid="Base_Column_List" />
    from employees
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 08 14:48:43 CST 2019.
    -->
    delete from employees
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sencloud.mybatis.dataobject.EmployeeDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 08 14:48:43 CST 2019.
    -->
    insert into employees (employee_id, first_name, last_name, 
      email, phone_number, job_id, 
      salary, commission_pct, manager_id, 
      department_id, hiredate)
    values (#{employeeId,jdbcType=INTEGER}, #{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, #{jobId,jdbcType=VARCHAR}, 
      #{salary,jdbcType=DOUBLE}, #{commissionPct,jdbcType=DOUBLE}, #{managerId,jdbcType=INTEGER}, 
      #{departmentId,jdbcType=INTEGER}, #{hiredate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sencloud.mybatis.dataobject.EmployeeDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 08 14:48:43 CST 2019.
    -->
    insert into employees
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="firstName != null">
        first_name,
      </if>
      <if test="lastName != null">
        last_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="jobId != null">
        job_id,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="commissionPct != null">
        commission_pct,
      </if>
      <if test="managerId != null">
        manager_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="hiredate != null">
        hiredate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="firstName != null">
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null">
        #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=DOUBLE},
      </if>
      <if test="commissionPct != null">
        #{commissionPct,jdbcType=DOUBLE},
      </if>
      <if test="managerId != null">
        #{managerId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="hiredate != null">
        #{hiredate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sencloud.mybatis.dataobject.EmployeeDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 08 14:48:43 CST 2019.
    -->
    update employees
    <set>
      <if test="firstName != null">
        first_name = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        last_name = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null">
        job_id = #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=DOUBLE},
      </if>
      <if test="commissionPct != null">
        commission_pct = #{commissionPct,jdbcType=DOUBLE},
      </if>
      <if test="managerId != null">
        manager_id = #{managerId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="hiredate != null">
        hiredate = #{hiredate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sencloud.mybatis.dataobject.EmployeeDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 08 14:48:43 CST 2019.
    -->
    update employees
    set first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      job_id = #{jobId,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=DOUBLE},
      commission_pct = #{commissionPct,jdbcType=DOUBLE},
      manager_id = #{managerId,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=INTEGER},
      hiredate = #{hiredate,jdbcType=TIMESTAMP}
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </update>

  <!-- foreach-->
    <!--
        collection ： 指定要遍历的集合：
            list类型的参数会特殊处理封装在map中，map的key就叫list
            item： 将当前遍历出的元素赋值给指定的变量
            #{变量名}就能取出变量的值也就是当前遍历出的元素
            open: 遍历出的所有拼接一个开始的字符串
            separator: 每个元素之间的分隔符
            close: 遍历出的所有拼接一个结束的字符串
            index:索引，遍历list的时候就是list的索引，item就是当前的值
                        遍历map的时候index表示的就是map的key，item就是map的值

    -->
  <select id="getEmpByIds" resultMap="BaseResultMap" parameterType="java.util.List">

    select * from employees where employee_id in

    <foreach collection="list"  item="item_id" open="(" close=")" separator="," >
      #{item_id}
    </foreach>

  </select>

    <!-- 批量新增  方式一：-->
   <insert id="addEmps1" >
       insert into employees
       (first_name,last_name,email)
      values
      <foreach collection="emps" item="emp"  separator=",">
          (#{emp.firstName},#{emp.lastName},#{emp.email})
      </foreach>

   </insert>

  <!-- 批量新增  方式二： 需要设置数据库连接属性-->
  <insert id="addEmps" >
    <foreach collection="emps" item="emp" separator=";">
      insert into employees
    (first_name,last_name,email)
    values
      (#{emp.firstName},#{emp.lastName},#{emp.email})
    </foreach>
  </insert>

<!--批量删除 方式一：-->

  <delete id="deleteEmps1">
    delete from employees where employee_id in
    <foreach collection="empsDelList" item="empDelList" separator="," open="(" close=")">
      #{empDelList}
    </foreach>

  </delete>

  <!--批量删除 方式二：-->

  <delete id="deleteEmps">
    <foreach collection="empsDelList" item="empDelList" separator=";" >
      delete from employees where employee_id =#{empDelList}

    </foreach>

  </delete>

</mapper>